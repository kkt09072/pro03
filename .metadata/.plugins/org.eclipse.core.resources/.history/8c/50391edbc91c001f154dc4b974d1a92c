package com.morning.ctrl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.morning.biz.FileboardService;
import com.morning.domain.Fileboard;

@Controller
@RequestMapping("/fileboard/")
public class FileboardController {

	
	
	@Autowired
	private FileboardService fileboardService;
	
	@RequestMapping("list.do")
	public String getBoardList(@RequestAttribute("pageNo") String pageNo, Model model) {
		
		if(pageNo!=null) {
			model.addAttribute("list", fileboardService.getPostList(pageNo));
		} else {
			model.addAttribute("list", fileboardService.getPostList());
		}
		
		return "fileboard/list";
	}
	
	@RequestMapping("detail.do")
	public String getBoard(@RequestParam("no") int no, Model model) {
		model.addAttribute("board", fileboardService.getPostDetailNoHits(no));
		return "fileboard/get";
	}

	@GetMapping("insert.do")
	public String insBoard(Model model) {
		return "fileboard/insert";
	}
	
	@PostMapping("insertPro.do")
	public String insBoardPro(MultipartHttpServletRequest files, Model model) {
        String uploadFolder = servletContext.getRealPath("/resources/upload");
        List<MultipartFile> list = files.getFiles("files");
        
        List<UploadData> datas = new ArrayList<>();
        
        for (MultipartFile file : list) {
            String fileRealName = file.getOriginalFilename();
            long size = file.getSize();
            
            log.info("파일명: {}", fileRealName);
            log.info("파일 크기(byte): {}", size);
            
            datas.add(new UploadData(fileRealName, size));
            
            File saveFile = new File(uploadFolder + "\\" + fileRealName);
            try {
                file.transferTo(saveFile);
            } catch (IllegalStateException | IOException e) {
                e.printStackTrace();
            }
        }
        
        /* 서비스 호출 영역 시작 */
        
        
        /* 서비스 호출 영역 끝 */
		fileboardService.write(fileboard);
		return "redirect:list.do";
	}

	@GetMapping("update.do")
	public String upBoard(@RequestParam("no") int no, Model model) {
		model.addAttribute("board", fileboardService.getPostDetailNoHits(no));
		return "board/edit";
	}
	
	@PostMapping("updatePro.do")
	public String upBoardPro(@RequestAttribute("fileboard") Fileboard fileboard, Model model) {
		fileboardService.updatePost(fileboard);
		return "redirect:list.do";
	}
	
	@RequestMapping("delBoard.do")
	public String delBoard(@RequestParam("no") int no, Model model) {
		fileboardService.deletePost(no);
		return "redirect:list.do";
	}
}
