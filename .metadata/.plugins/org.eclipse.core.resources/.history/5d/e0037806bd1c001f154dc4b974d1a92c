package com.morning.ctrl;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.maven.shared.utils.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.google.gson.JsonObject;
import com.morning.biz.FreeBiz;
import com.morning.biz.MemberService;
import com.morning.domain.Free;

@Controller
@RequestMapping("/free/")
public class FreeController {

	@Autowired
	private FreeBiz freeService;
	
	@Autowired
	private MemberService memberService;
	
	
	@RequestMapping("list.do")
	public String getFreeList(Model model) {
		model.addAttribute("list", freeService.getFreeList());
		return "free/list";
	}
	
	@RequestMapping("detail.do")
	public String getFree(@RequestParam("no") int no, Model model) {
		model.addAttribute("free", freeService.getFree(no));
		return "free/get";
	}

	@GetMapping("insert.do")
	public String insFree(Free Free, Model model) {
		return "free/insert";
	}
	
	@PostMapping("insertPro.do")
	public String insFreePro(Free free, HttpSession session, Model model) {
		String id = (String) session.getAttribute("sid");
		String name = (String) session.getAttribute("sname");
		free.setId(id);
		free.setName(name);
		freeService.insFree(free);
		return "redirect:list.do";
	}

	@GetMapping("update.do")
	public String upFree(@RequestParam("no") int no, Model model) {
		model.addAttribute("free", freeService.getFree(no));
		return "free/edit";
	}
	
	@PostMapping("updatePro.do")
	public String upFreePro(@RequestAttribute("free") Free free, Model model) {
		freeService.upFree(free);
		return "redirect:list.do";
	}
	
	@RequestMapping("delFree.do")
	public String delFree(@RequestParam("no") int no, Model model) {
		freeService.delFree(no);
		return "redirect:list.do";
	}
	
	@PostMapping("fileupload.do") 
	@ResponseBody
	public String fileUpload(HttpServletRequest req, HttpServletResponse resp, 
            MultipartHttpServletRequest multiFile) throws Exception {
		JsonObject json = new JsonObject();
		PrintWriter printWriter = null;
		OutputStream out = null;
		MultipartFile file = multiFile.getFile("upload");
		if(file != null){
			if(file.getSize() > 0 && StringUtils.isNotBlank(file.getName())){
				if(file.getContentType().toLowerCase().startsWith("image/")){
					try{
						String fileName = file.getName();
						byte[] bytes = file.getBytes();
						String uploadPath = req.getServletContext().getRealPath("/img");
						File uploadFile = new File(uploadPath);
						if(!uploadFile.exists()){
							uploadFile.mkdirs();
						}
						fileName = UUID.randomUUID().toString();
						uploadPath = uploadPath + "/" + fileName;
						out = new FileOutputStream(new File(uploadPath));
	                   out.write(bytes);
	                   
	                   printWriter = resp.getWriter();
	                   resp.setContentType("text/html");
	                   String fileUrl = req.getContextPath() + "/img/" + fileName;
	                   
	                   // json 데이터로 등록
	                   // {"uploaded" : 1, "fileName" : "test.jpg", "url" : "/img/test.jpg"}
	                   // 이런 형태로 리턴이 나가야함.
	                   json.addProperty("uploaded", 1);
	                   json.addProperty("fileName", fileName);
	                   json.addProperty("url", fileUrl);
	                   
	                   printWriter.println(json);
	               }catch(IOException e){
	                   e.printStackTrace();
	               }finally{
	                   if(out != null){
	                       out.close();
	                   }
	                   if(printWriter != null){
	                       printWriter.close();
	                   }		
					}
				}
			}
		}
		return null;
	}
}
