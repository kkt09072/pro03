/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-05-28 05:54:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/kim/pro03/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro03/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/kim/pro03/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro03/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1714616048719L));
    _jspx_dependants.put("jar:file:/D:/kim/pro03/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro03/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html charset=UTF8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("	<meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("	<title>회원 가입</title>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/head.jsp", out, false);
      out.write("\n");
      out.write("	<style>\n");
      out.write("	.title { padding-top:36px; padding-bottom:20px; }\n");
      out.write("    .agree_fr { width: 900px; white-space:pre-wrap; margin: 10px auto;\n");
      out.write("            padding: 24px; border:2px solid #eee; height:600px; overflow-y:auto; }\n");
      out.write("    .table tr td, .table tr th { padding:14px; }        \n");
      out.write("	</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"full-wrap\">\n");
      out.write("    <!-- 헤더 부분 인클루드 -->\n");
      out.write("    <header id=\"hd\">\n");
      out.write("    	<div class=\"container\">\n");
      out.write("    		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/hd.jsp", out, false);
      out.write("\n");
      out.write("    	</div>\n");
      out.write("    </header>\n");
      out.write("    <main id=\"contents\" class=\"contents\">\n");
      out.write("    	<div id=\"breadcrumb\" class=\"container breadcrumb-wrap clr-fix\" style=\"height:60px; line-height:60px;\">\n");
      out.write("	    	<nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n");
      out.write("			  <ul>\n");
      out.write("			    <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Home</a></li>\n");
      out.write("			    <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Member</a></li>\n");
      out.write("			    <li class=\"is-active\"><a href=\"#\" aria-current=\"page\">Join Form</a></li>\n");
      out.write("			  </ul>\n");
      out.write("			</nav>\n");
      out.write("    	</div>\n");
      out.write(" 	    <section class=\"page\" id=\"page1\">\n");
      out.write("    		<h2 class=\"page-title\">회원 가입</h2>\n");
      out.write("    		<hr>\n");
      out.write("    		<div class=\"page-wrap\">\n");
      out.write("            	<form name=\"frm1\" id=\"frm1\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/joinPro.do\" method=\"post\" onsubmit=\"return joinCheck(this)\">\n");
      out.write("                	<table id=\"table1\" class=\"table\">\n");
      out.write("	                    <tbody>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">아이디</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"text\" name=\"id\" id=\"id\" placeholder=\"아이디 입력\" pattern=\"^[a-z0-9]{5,12}\" maxlength=\"12\" class=\"input\" required style=\"width:700px; float:left;\">\n");
      out.write("	                            <input type=\"button\" id=\"idCkBtn\" class=\"button is-primary\" value=\"아이디 중복 체크\" onclick=\"idCheck()\" style=\"margin-left:20px\">\n");
      out.write("	                            <input type=\"hidden\" name=\"idck\" id=\"idck\" value=\"no\"/>\n");
      out.write("	                            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("	                            ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">비밀번호</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"password\" name=\"pw\" id=\"pw\" placeholder=\"비밀번호 입력\" maxlength=\"12\" class=\"input\" required>\n");
      out.write("	                            <!-- pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,12}$\"  -->\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">비밀번호 확인</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"password\" name=\"pw2\" id=\"pw2\" placeholder=\"비밀번호 확인 입력\" maxlength=\"12\" class=\"input\" required>\n");
      out.write("	                            <!-- pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,12}$\"  -->\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">이름</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"이름 입력\" class=\"input\" maxlength=\"40\" required>\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">이메일</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"이메일 입력\" pattern=\"^\\w+((\\.\\w+)?)+@\\w+.?\\w+\\.\\w+$\" maxlength=\"80\" class=\"input\" required>\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">전화번호</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"tel\" name=\"tel\" id=\"tel\" placeholder=\"전화번호 입력\" pattern=\"[0-9]{2,3}-[0-9]{3,4}-[0-9]{3,4}\" maxlength=\"19\" class=\"input\" required>\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <th style=\"background-color:#dcdcdc\">주소</th>\n");
      out.write("	                        <td>\n");
      out.write("	                            <input type=\"text\" name=\"addr1\" id=\"addr1\" placeholder=\"기본주소 입력\" maxlength=\"150\" class=\"input\" required><br><br>\n");
      out.write("	                            <input type=\"text\" name=\"addr2\" id=\"addr2\" placeholder=\"상세주소 입력\" maxlength=\"90\" class=\"input\" required><br><br>\n");
      out.write("	                            <input type=\"text\" name=\"postcode\" id=\"postcode\" placeholder=\"우편번호 입력\" maxlength=\"9\" class=\"input\" required>\n");
      out.write("	                            <input type=\"button\" id=\"isAddrBtn\" class=\"button is-link\" value=\"주소 입력\" onclick=\"findAddr()\">\n");
      out.write("	                            <input type=\"hidden\" name=\"addrck\" id=\"addrck\" value=\"no\"/>\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    <tr>\n");
      out.write("	                        <td colspan=\"2\">\n");
      out.write("	                        	<div class=\"buttons\">\n");
      out.write("		                            <input type=\"submit\" class=\"button is-danger\" value=\"회원 가입\" >\n");
      out.write("		                            <input type=\"reset\" class=\"button is-info\" value=\"취소\" >\n");
      out.write("	                            </div>\n");
      out.write("	                        </td>\n");
      out.write("	                    </tr>\n");
      out.write("	                    </tbody>\n");
      out.write("	                </table>\n");
      out.write("	            </form>\n");
      out.write("	            <script>\n");
      out.write("	                $(document).ready(function(){\n");
      out.write("	                    $(\"#id\").keyup(function(){\n");
      out.write("	                        $(\"#idck\").val(\"no\");\n");
      out.write("	                        if($(this).val()!=\"\"){\n");
      out.write("	                            $(\"#msg\").html(\"<strong>아이디 입력중입니다.</strong>\");\n");
      out.write("	                        } else {\n");
      out.write("	                            $(\"#msg\").html(\"아직 아이디 중복 체크를 하지 않으셨습니다.\");\n");
      out.write("	                        }\n");
      out.write("	                    });\n");
      out.write("	                });\n");
      out.write("	            </script>\n");
      out.write("	            <script>\n");
      out.write("	                function idCheck(){\n");
      out.write("	                    if($(\"#id\").val()==\"\"){\n");
      out.write("	                        alert(\"아이디를 입력하지 않으셨습니다.\");\n");
      out.write("	                        $(\"#id\").focus();\n");
      out.write("	                        return;\n");
      out.write("	                    }\n");
      out.write("	                    var params = {	id : $(\"#id\").val()	} //전송되어질 데이터를 객체로 묶음\n");
      out.write("	                    $.ajax({\n");
      out.write("	                        url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/idCheck.do?id=\"+$(\"#id\").val(),	//아이디가 전송되어질 곳\n");
      out.write("	                        type:\"get\",		//전송방식\n");
      out.write("	                        dataType:\"json\",	//데이터 반환 방식\n");
      out.write("	                        //data:params,		//전송방식이 post인 경우 객체로 묶어서 전송\n");
      out.write("	                        success:function(result){\n");
      out.write("	                            console.log(result.data);\n");
      out.write("	                            var idChk = result.data;	//true 또는 false를 받음\n");
      out.write("	                            if(!idChk){	//사용할 수 없는 아이디\n");
      out.write("	                                $(\"#idck\").val(\"no\");\n");
      out.write("	                                $(\"#msg\").html(\"<strong style='color:red'>기존에 사용되고 있는 아이디 입니다. 다시 입력하시기 바랍니다.</strong>\");\n");
      out.write("	                                $(\"#id\").focus();\n");
      out.write("	                            } else if(idChk){	//사용 가능한 아이디\n");
      out.write("	                                $(\"#idck\").val(\"yes\");\n");
      out.write("	                                $(\"#msg\").html(\"<strong style='color:blue'>사용가능한 아이디 입니다.</strong>\");\n");
      out.write("	                            } else if(idck==\"\"){\n");
      out.write("	                                $(\"#msg\").html(\"<strong>아이디가 확인되지 않았습니다. 다시 시도해주시기 바랍니다.</strong>\");\n");
      out.write("	                            }\n");
      out.write("	                        }\n");
      out.write("	                    });\n");
      out.write("	                }\n");
      out.write("	                function joinCheck(f){\n");
      out.write("	                    if(f.pw.value!=f.pw2.value){\n");
      out.write("	                        alert(\"비밀번호와 비밀번호 확인이 서로 다릅니다.\");\n");
      out.write("	                        f.pw.focus();\n");
      out.write("	                        return false;\n");
      out.write("	                    }\n");
      out.write("	                    if(f.idck.value!=\"yes\"){\n");
      out.write("	                        alert(\"아이디 중복 체크를 하지 않으셨습니다.\");\n");
      out.write("	                        return false;\n");
      out.write("	                    }\n");
      out.write("	                }\n");
      out.write("	            </script>\n");
      out.write("	            <script>\n");
      out.write("	                function findAddr() {\n");
      out.write("	                    new daum.Postcode({\n");
      out.write("	                        oncomplete: function(data) {\n");
      out.write("	                            console.log(data);\n");
      out.write("	                            var roadAddr = data.roadAddress;\n");
      out.write("	                            var jibunAddr = data.jibunAddress;\n");
      out.write("	                            document.getElementById(\"postcode\").value = data.zonecode;\n");
      out.write("	                            if(roadAddr !== '') {\n");
      out.write("	                                document.getElementById(\"addr1\").value = roadAddr;\n");
      out.write("	                            } else if(jibunAddr !== ''){\n");
      out.write("	                                document.getElementById(\"addr1\").value = jibunAddr;\n");
      out.write("	                            }\n");
      out.write("	                            document.getElementById(\"addr2\").focus();\n");
      out.write("	                        }\n");
      out.write("	                    }).open();\n");
      out.write("	                }\n");
      out.write("	            </script>\n");
      out.write("	            <script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("	        </div>\n");
      out.write("	    </section>    \n");
      out.write("    </main>\n");
      out.write("    <!-- 푸터 부분 인클루드 -->\n");
      out.write("    <footer id=\"ft\">\n");
      out.write("    	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/ft.jsp", out, false);
      out.write("\n");
      out.write("    </footer>\n");
      out.write("    <script>\n");
      out.write("    $(document).ready(function(){\n");
      out.write("    	$(\"#tb1_length, #tb1_filter\").css(\"margin-bottom\", \"20px\");\n");
      out.write("    });\n");
      out.write("    </script>\n");
      out.write("</div>    \n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/join.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("path2");
      // /WEB-INF/views/member/join.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/join.jsp(5,0) '${pageContext.servletContext.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.servletContext.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/join.jsp(52,29) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty qid }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("	                                <p id=\"msg\" style=\"clear:both;padding:0.5rem\">아직 아이디 중복 체크를 하지 않으셨습니다.</p>\n");
          out.write("	                            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/join.jsp(55,29) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty qid }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("	                                <p id=\"msg\" style=\"clear:both;padding:0.5rem\">아이디 중복 체크후 수정하였습니다.</p>\n");
          out.write("	                            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
